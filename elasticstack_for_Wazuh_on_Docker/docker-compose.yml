version: "2.2"

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200 | grep -q 'You Know, for Search'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - elastic-network

  kibana:
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - elastic-network

  logstash:
    build:
      context: .
      dockerfile: Dockerfile.logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./certs/wazuh-indexer:/etc/logstash/wazuh-indexer-certs
      - ./certs/elasticsearch:/etc/logstash/elasticsearch-certs
    ports:
      - "5044:5044"
    environment:
      - WAZUH_INDEXER_ADDRESS=${WAZUH_INDEXER_ADDRESS}
      - WAZUH_INDEXER_USERNAME=${WAZUH_INDEXER_USERNAME}
      - WAZUH_INDEXER_PASSWORD=${WAZUH_INDEXER_PASSWORD}
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    depends_on:
      es01:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9600 | grep -q '\"status\":\"green\"'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - elastic-network

volumes:
  esdata01:
    driver: local
  kibanadata:
    driver: local

networks:
  elastic-network:
    external: true
